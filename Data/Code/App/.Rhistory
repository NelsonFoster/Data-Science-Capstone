library(leaflet)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tidycensus)
library(tigris)
options(tigris_use_cache = TRUE)
library(sf)
library(sp)
library(censusapi)
library(rgdal)
library(KernSmooth)
library(spatstat)
library(spdep)
library(GISTools)
library(tmap)
library(tmaptools)
library(maptools)
library(data.table)
library(raster)
states <- states(cb=T)
states %>%
leaflet() %>%
addTiles() %>%
addPolygons(popup=~NAME)
df = read.csv("./mp_points.csv", stringsAsFactors = F)
mp_state <- df %>%
group_by(State_Of_Last_Contact) %>%
summarize(total=n()) %>%
mutate(type = "Missing Persons")
View(df)
df <- tidyr::separate(data=df,
col=geo_point_2d,
into=c("Latitude", "Longitude"),
sep=",",
remove=FALSE)
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
df$Race_Ethnicity[df$Race_Ethnicity=="Black / African American;Hispanic / Latino"] <- "Black / African American"
df$Race_Ethnicity[df$Race_Ethnicity=="Black / African American;White / Caucasian"] <- "Black / African American"
df$Race_Ethnicity[df$Race_Ethnicity=="Hispanic / Latino;Asian"] <- "Hispanic / Latino"
df$Race_Ethnicity[df$Race_Ethnicity=="Hispanic / Latino;Native American / Alaskan Native"] <- "Hispanic / Latino"
df$Race_Ethnicity[df$Race_Ethnicity=="Hispanic / Latino;Uncertain"] <- "Hispanic / Latino"
df$Race_Ethnicity[df$Race_Ethnicity=="Other"] <- "Other/Uncertain"
df$Race_Ethnicity[df$Race_Ethnicity=="Uncertain"] <- "Other/Uncertain"
df$Race_Ethnicity[df$Race_Ethnicity=="White / Caucasian;Black / African American"] <- "White / Caucasian"
df$Race_Ethnicity[df$Race_Ethnicity=="White / Caucasian;Hispanic / Latino"] <- "White / Caucasian"
df$Race_Ethnicity[df$Race_Ethnicity=="White / Caucasian;Uncertain"] <- "White / Caucasian"
mp_race_ethnicity <- df %>%
group_by(Race_Ethnicity) %>%
summarize(total=n()) %>%
mutate(type = "Race/Ethnicity")
states_merged_mp <- geo_join(states, mp_state, "STUSPS", "State_Of_Last_Contact")
pal <- colorNumeric("Blues", domain=states_merged_mp$total)
states_merged_mp <- subset(states_merged_mp, !is.na(total))
popup_mp <- paste0("Total Missing Persons: ", as.character(states_merged_mp$total))
popup_mp <- paste0("Total Missing Persons: ", as.character(states_merged_mp$total))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-98.483330, 38.712046, zoom = 4) %>% #geographic center of the United States
addPolygons(data = states_merged_mp ,
fillColor = ~pal(states_merged_mp$total),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_mp) %>%
addLegend(pal = pal,
values = states_merged_mp$total,
position = "bottomright",
title = "Missing Persons in the United States")
Sys.setenv(CENSUS_KEY="31fff949176a736010c1e360cacac97f81c300b8")
readRenviron("~/.Renviron")
Sys.getenv("CENSUS_KEY")
census_key <- ("31fff949176a736010c1e360cacac97f81c300b8")
state_pop <-  getCensus(name="acs/acs5",
vintage=2015,
key=census_key,
vars=c("NAME", "B01003_001E"),
region="state:*")
state_pop <-  getCensus(name="acs/acs5",
vintage=2015,
key=census_key,
vars=c("NAME", "B01003_001E"),
region="state:*")
state_pop <-  getCensus(name="acs/acs5",
vintage=2015,
key=census_key,
vars=c("NAME", "B01003_001E"),
region="state:*")
colnames(state_pop) <- c("state_id", "NAME", "population")
state_pop$state_id <- as.numeric(state_pop$state_id)
state_off <- data.frame(state.abb, state.name)
colnames(state_off) <- c("state", "NAME")
state_pop <- left_join(state_pop, state_off)
state_pop$state <- ifelse(state_pop$NAME=="District of Columbia", "DC", as.character(state_pop$state))
state_pop$state <- ifelse(state_pop$NAME=="Puerto Rico", "PR", as.character(state_pop$state))
names(mp_state)[names(mp_state) == "State_Of_Last_Contact"] <- "state"
mp_state_pop <- left_join(mp_state, state_pop)
mp_state_pop$per_capita <- round(mp_state_pop$total/mp_state_pop$population*100000,2)
states_merged_mp_pc <- geo_join(states, mp_state_pop, "STUSPS", "state")
pal_mp <- colorNumeric("Blues", domain=states_merged_mp_pc$per_capita)
states_merged_mp_pc <- subset(states_merged_mp_pc, !is.na(per_capita))
popup_mp <- paste0("<strong>", states_merged_mp_pc$NAME,
"</strong><br />Total: ", states_merged_mp_pc$total,
"<br />Per capita: ",
as.character(states_merged_mp_pc$per_capita))
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = states_merged_mp_pc ,
fillColor = ~pal_mp(states_merged_mp_pc$per_capita),
fillOpacity = 0.9,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_mp) %>%
addLegend(pal = pal_mp,
values = states_merged_mp_pc$per_capita,
position = "bottomright",
title = "Missing Persons<br />per 100,000<br/>residents")
class(states_merged_mp_pc)
class(df)
head(blocks@data)
head(states_merged_mp_pc@data)
class(states_merged_mp_pc)
head(states_merged_mp_pc@data)
plot(states_merged_mp_pc)
df_sf <-st_as_sf(df)
colnames(df)
df_points <- st_read("df_points.shp")
class(df_points)
class(df_points)
st_crs(df_points)
qtm(states_merged_mp_pc, fill = "blue", style = "natural")
qtm(states_merged_mp_pc, fill="total", text="NAME", text.size=0.5,
format="World_wide", style="classic",
text.root=5, fill.title="Total Missing Persons")
qtm(states_merged_mp_pc, fill="total", text="state", text.size=0.5,
format="World_wide", style="classic",
text.root=5, fill.title="Total Missing Persons")
qtm(states_merged_mp_pc, fill="per_capita", text="state", text.size=0.5,
format="World_wide", style="classic",
text.root=5, fill.title="Total Missing Persons")
tmap_mode('view')
tm_shape(df_points) +
tm_polygons(col = #C6DBEF80)
tmap_mode("plot")
tmap_mode('view')
tm_shape(df_points) +
tm_polygons(col = "#C6DBEF80")
tmap_mode('view')
tm_shape(states_merged_mp_pc) +
tm_polygons(col = "#C6DBEF80")
View(states_merged_mp_pc)
View(state_pop)
apis <- listCensusApis()
View(apis)
data.frame(states_merged_mp_pc)
data.frame(df_points)
head(data.frame(df_points))
df_points$geometry
colnames(data.frame(df_points))
View(df_points)
View(states_merged_mp)
View(states_merged_mp_pc)
View(df_points)
df_points$Rc_Et[df_points$Rc_Et=="Black / African American;Hispanic / Latino"] <- "Black / African American"
df_points$Rc_Et[df_points$Rc_Et=="Black / African American;White / Caucasian"] <- "Black / African American"
df_points$Rc_Et[df_points$Rc_Et=="Hispanic / Latino;Asian"] <- "Hispanic / Latino"
df_points$Rc_Et[df_points$Rc_Et=="Hispanic / Latino;Uncertain"] <- "Hispanic / Latino"
df_points$Rc_Et[df_points$Rc_Et=="Uncertain"] <- "Other/Uncertain"
df_points$Rc_Et[df_points$Rc_Et=="White / Caucasian;Hispanic / Latino"] <- "White / Caucasian"
df_points$Rc_Et[df_points$Rc_Et=="White / Caucasian;Uncertain"] <- "White / Caucasian"
View(df_points)
hist(mp_state)
hist(mp_state$total)
hist(states_merged_mp_pc$total)
hist(mp_race_ethnicity)
hist(mp_race_ethnicity$total
)
hist(mp_race_ethnicity$type)
summary(mp_race_ethnicity)
summary(mp_race_ethnicity$total)
str(mp_race_ethnicity)
View(mp_race_ethnicity)
plot(mp_race_ethnicity)
View(mp_race_ethnicity)
hist(df_points$Rc_Et)
hist(sum(df_points$Rc_Et))
hist(count(df_points$Rc_Et))
tmap_mode('view')
tm_shape(states_merged_mp_pc) +
tm_polygons(col = "#C6DBEF80")
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons per Capita", palette = "-GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(frame = F, title = "United States",
title.size = 2, title.position = c(0.55, "top"),
legend.hist.size = 0.5)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons per Capita", palette = "-GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(frame = F, title = "United States",
title.size = 2, title.position = c(0.55, "top"),
legend.hist.size = 0.5)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "-GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(position = c(0.8, 0.07)) +
tm_layout(frame = F, title = "United States",
title.size = 2, title.position = c(0.55, "top"),
legend.hist.size = 0.5)
tmap_mode("plot")
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "-GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(position = c(0.8, 0.07)) +
tm_layout(frame = F, title = "United States",
title.size = 2, title.position = c(0.55, "top"),
legend.hist.size = 0.5)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_view(set.view = -98.483330, 38.712046, zoom = 4) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_view(set.view = -98.483330, 38.712046) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
set.view = ("-98.483330, 38.712046") +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
set.view = ("-98.483330, 38.712046") +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_view()  set.view = ("-98.483330, 38.712046") +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_view()  set.view = ("-98.483330, 38.712046") +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_view(set.view = ("-98.483330, 38.712046")) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_compass(position = c(0.1, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 1, title.position = c(0.55, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_compass(position = c(0.07, 0.8)) +
tm_layout(frame = F, title = "United States",
title.size = 0.25, title.position = c(0.25, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_compass(position = c(0.01, 0.25)) +
tm_layout(frame = F, title = "United States",
title.size = 0.25, title.position = c(0.25, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.02) +
tm_compass(position = c(0.01, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 0.25, title.position = c(0.25, "top"),
legend.hist.size = 0.25)
tm_shape(states_merged_mp_pc) +
tm_polygons("per_capita", title = "Missing Persons Per Capita", palette = "GnBu",
breaks = c(0, round(quantileCuts(states_merged_mp_pc$per_capita, 6), 1)),
legend.hist = T) +
tm_scale_bar(width = 0.22) +
tm_compass(position = c(0.01, 0.01)) +
tm_layout(frame = F, title = "United States",
title.size = 0.25, title.position = c(0.25, "top"),
legend.hist.size = 0.25)
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "red", alpha = 0.5)
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "light blue", alpha = 0.5)
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "lightblue", alpha = 0.5)
tmap_mode("view")
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-98.483330, 38.712046, zoom = 4) %>% #geographic center of the United States
addPolygons(data = states_merged_mp ,
fillColor = ~pal(states_merged_mp$total),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_mp) %>%
addLegend(pal = pal,
values = states_merged_mp$total,
position = "bottomright",
title = "Missing Persons in the United States")
m <- leaflet(data = df) %>%
addTiles() %>%
addProviderTiles("CartoDB")
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("ID:", df$id_Formatted, "<br>",
"First Name:", df$First_Name, "<br>",
"Last Name:", df$Last_Name, "<br>",
"Date Missing:", df$Date_Of_Last_Contact,"<br>",
"City:", df$City_Of_Last_Contact, "<br>",
"County:", df$County_Of_Last_Contact, "<br>",
"State:", df$State_Of_Last_Contact,"<br>",
"Age:", df$Computed_Missing_Min_Age,"<br>",
"Gender:", df$Gender,"<br>",
"Race/Ethnicity:", df$Race_Ethnicity))
m
runApp()
runApp()
tmap_mode("view")
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
tmap_mode("view")
tm_shape(df) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
tmap_mode("view")
tm_shape(states_merged_mp_pc) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
runApp()
tmap_mode("view")
tm_shape(df_points) +
tm_dots(size = 0.5, shape = 19, col = "blue", alpha = 0.5)
colname(df_points)
colnams(df_points)
colnames(df_points)
tmap_mode('view')
tm_shape(df_points) +
tm_raster(col = "Rc_Et", title = "Race & Ethnicity", breaks = c(seq(0,1, 0.2))) +
tm_layout(legend.format = list(digits = 1))
colnames(states_merged_mp_pc)
View(states_merged_mp_pc)
ggplot(states_merged_mp_pc@data, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 40) +
xlab("Number of Missing persions") +
labs(title = Distribution of Missing persions)
ggplot(states_merged_mp_pc@data, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 40) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(states_merged_mp_pc$state, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 40) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(mp_state, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 40) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(mp_state, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 40) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(mp_state, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
View(mp_state)
ggplot(states_merged_mp, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(states_merged_mp@data, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(states_merged_mp_pc@data, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(states_merged_mp_pc@data, aes(per_capita)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing persions")
ggplot(states_merged_mp_pc@data, aes(per_capita)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing Persions - Per Capita")
ggplot(states_merged_mp_pc@data, aes(per_capita)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Per Capita Missing persions") +
labs(title = "Distribution of Missing Persions - Per Capita")
ggplot(states_merged_mp_pc@data, aes(total)) +
geom_histogram(col = "salmon", fill = "cyan", bins = 52) +
xlab("Number of Missing persions") +
labs(title = "Distribution of Missing Persons - Total")
library(ggplot)
library(ggplot2)
View(mp_race_ethnicity)
library(reshape2)
class(mp_state)
hist(mp_race_ethnicity)
hist(mp_race_ethnicity$total)
hist(mp_race_ethnicity$type)
mp_race_ethnicity$Race_Ethnicity
hist(mp_race_ethnicity$Race_Ethnicity)
hist(count(mp_race_ethnicity$Race_Ethnicity))
hist(sum(mp_race_ethnicity$Race_Ethnicity))
plot(mp_race_ethnicity$Race_Ethnicity)
plot(mp_race_ethnicity)
plot(mp_race_ethnicity$total)
plot(mp_race_ethnicity::Race_Ethicity$total)
library(rgeos)
proj4string(states_merged_mp_pc)
proj4string(states_merged_mp)
proj4string(df_points)
st_crs(df_points)
poly.areas(states_merged_mp_pc)
as.matrix(dist(coordinates(states_merged_mp_pc)))
as.matrix(dist(coordinates(df_points)))
colnames(mp_state)
tmap_mode('view')
tm_shape(states_merged_mp_pc) + tm_borders() + tm_shape(df_points) +
tm_dots(col='navyblue')
tmap_mode('view')
#tmap mode set to interactive viewing
tm_shape(states_merged_mp_pc) + tm_borders() + tm_shape(df_points) +
tm_dots(col='navyblue')
class(df_points)
