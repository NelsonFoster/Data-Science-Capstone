setwd("~/Documents/GitHub/Data-Science-Capstone/Data/Code/App")
getwd()
mp <- read.table("https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&sort=modifieddatetime&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender")
head(mp)
library(jsonlite)
mp <- fromJSON("https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&sort=modifieddatetime&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender")
head(mp)
mp <- fromJSON("https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&sort=modifieddatetime&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender")
head(mp)
list(mp)
mp1 <-read.csv("namus-missings.csv")
mp1 <-read.csv("namus-missings-1.csv")
head(mp1)
list(mp)
mp <- fromJSON("https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&sort=modifieddatetime&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender")
View(mp)
mp1 <-read.csv("namus-missings-1.csv")
list(mp1)
colnames(mp1)
colnames(mp)
library(shiny)
library(shinydashboard)
colnames(mp1)
class(Geo.Shape)
class(mp1@Geo.Shape)
class(mp1@First.Name)
library(GISTools)
summmary(mp1)
summary(mp1)
summary(mp1$Computed.Missing.Max.Age)
library(rgdal)
library(sf)
spatial <- st_read("namus-missings.shp")
qtm(spatial, fill="red", style = "natural")
library(tmap)
qtm(spatial, fill="red", style = "natural")
library(RgoogleMaps)
qtm(spatial, fill="Gender", text="Gender", text.size=0.5,
format="World_wide", style="classic",
text.root=5, fill.title="Median Income")
spatial[is.na(spatial)] <- -999
library(tmap)
qtm(spatial, fill="Gender", text="Gender", text.size=0.5,
format="World_wide", style="classic",
text.root=5, fill.title="Median Income")
spatial@data[!complete.cases(meuse@data),]
class(mp1@First.Name)
sp <- st_read("namus-missings.shp")
head(sp)
colnames(sp)
spatial@data[!complete.cases(sp@geometry),]
sp@data[!complete.cases(sp@geometry),]
sp@geometry[!complete.cases(sp@geometry),]
mp1_shp <- st_read("namus-missings.shp")
head(mp1_shp)
colnames(mp1_shp)
mp1_shp@geometry <- na.omit(mp1_shp@geometry)
class(mp1)
mp1 <-read.csv("namus-missings-1.csv")
colnames(mp)
colnames(mp1)
class(mp1@geo_point_2d)
mp1_sf <-st_as_sf(mp1_shp)
qtm(mp1_sf, fill = "red", style = "natural")
mp1_shp1 <- na.omit(mp1_shp)
qtm(mp1_sf, fill = "red", style = "natural")
mp1_shp1 <- na.omit(mp1_shp.geometry)
mp2 <- na.omit(mp1)
library(rgdal)
library(raster)
str(mp2)
mp1 <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
class(mp1@geo_point_2d)
colnames(mp)
colnames(mp1)
mp2 <- na.omit(mp1)
str(mp2)
head(mp2$Lat)
str(mp1)
str(mp2)
mp3 <- read.csv("namus-missings-1.csv")
str(mp3)
print(mp2$Lat, digits=10)
mp <- fromJSON("https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&sort=modifieddatetime&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender")
mp1 <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp1_shp <- st_read("namus-missings.shp")
mp2 <- na.omit(mp1)
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp1_shp <- st_read("namus-missings.shp")
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp_shp <- st_read("namus-missings.shp")
mp1 <- na.omit(mp)
str(mp1)
mp1 <- st_as_sf(mp1, coords = c("lat", "lon"), crs = utm18nCRS)
str(mp1)
colnames(mp1)
mp1 <- st_as_sf(mp1, coords = c("Lat", "Lon"), crs = utm18nCRS)
mp_shp <- st_read("namus-missings.shp")
mp1 <- st_as_sf(mp1, coords = c("Lat", "Lon"), crs = WGS84)
library(sf)
mp1 <- st_as_sf(mp1)
class(mp1$Race_Ethnicity)
na.omit(mp_shp)
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp_shp <- st_read("namus-missings.shp")
mp_shp1 <- na.omit(mp_shp)
mp_shp1 <- na.omit(mp_shp$geometry)
colnames(mp_shp1)
mp_shp <- st_read("namus-missings.shp")
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp_shp <- st_read("namus-missings.shp")
colnames(mp_shp)
mp_shp1 <- na.omit(mp_shp)
class(mp_shp1)
mp_shp1
plot(mp_shp1)
mp1 <- na.omit(mp) #omit NAs
class(mp_shp1)
library(GISTools)
colnames(mp_shp1)
class(mp1$Race_Ethnicity)
class(mp_shp1$Race_Ethnicity)
class(mp_shp1$raceethnici)
mp_shp <- st_read("namus-missings.shp",
stringsAsFactors = FALSE)
mp <- read.csv("namus-missings-1.csv",
stringsAsFactors = FALSE)
mp1 <- na.omit(mp) #omit NAs
mp_shp <- st_read("namus-missings.shp",
stringsAsFactors = FALSE)
#dropping NA records
mp_shp1 <- na.omit(mp_shp)
class(mp_shp1$raceethnici)
colnames(mp_shp1)
class(mp_shp1$geometry)
class(mp_shp1)
summary(mp_shp1$currentagef)
head(mp_shp1$statedispla)
head(mp_shp1$computedmis)
summary(mp_shp1$computedmis)
summary(mp_shp1$computedmis.1)
ls()
ls(mp_shp1)
summary(mp_shp1$cityoflastc)
ls(mp_shp1$geometry)
class(mp_shp1$geometry)
plot(mp_shp1$namus2numbe)
city <- st_as_sf(mp_shp1$cityoflastc)
tmap_mode('plot')
tm_shape(mp_shp1) +
tm_polygons("raceethnici")
tmap_mode('plot')
tm_shape(mp_shp1)
tm_shape(mp_shp1$geometry)
tm_shape(mp_shp1$cityoflastc)
mp_shp <- st_read("namus-missings.shp")
mp_shp1 <- na.omit(mp_shp)
mp <- read.csv("namus-missings-1.csv")
mp1 <- na.omit(mp) #omit NAs
class(mp_shp1)
class(mp_shp1)
class(mp_shp1)
class(mp_shp1$cityoflastc)
city <- st_as_sf(mp_shp1$cityoflastc)
hist(mp_shp1$raceethnici)
hist(mp_shp1$currentagef)
summary(mp_shp1)
list(mp_shp1)
str(mp_shp1)
plot(mp_shp1)
plot(mp_shp1$idformatted)
plot(mp_shp1$geometry)
plot(mp_shp1$computedmis.1)
plot(mp_shp1$gender)
plot(mp_shp1$raceethnici)
plot(mp_shp1$statedispla)
tm_shape(mp_shp1) +
tm_polygons("white") +
tm_shape(mp_shp1) +
tm_dots(size = 0.5, shape = 19, col = "red", alpha = 1)
data(mp_shp1)
ls()
mp_shp2 <- data.frame(mp_shp1)
ls()
class(mp_shp2)
class(mp_shp1)
View(mp_shp2)
View(mp_shp1)
View(mp1)
class(mp1$Geo_Shape)
View(mp_shp)
View(mp_shp)
View(mp_shp2)
mp_shp2 = subset(mp_shp$geometry == "c(NaN, NaN)")
mp_shp2 = subset(mp_shp$geometry = "c(NaN, NaN)")
subset(mp_shp, geometry==c(NaN, NaN))
subset(mp_shp$geometry==c(NaN, NaN))
View(mp_shp)
mp_shp$geometry
is.na(mp_shp$geometry)
mp_shp$geometry
mp_shp[!is.na(mp_shp$geometry),]
str(mp1)
mp1 <- na.omit(mp) #omit NAs
str(mp1)
str(mp)
View(mp1)
View(mp)
View(mp1)
View(mp_shp)
View(mp_shp1)
View(mp_shp)
View(mp_shp2)
mp_shp$geometry
is.na(mp_shp$geometry)
mp_shp[!is.na(mp_shp$geometry),]
summary(mp_shp$geometry)
mp_shp1 <- mp_shp[!is.na(mp_shp$geometry),]
summary(mp_shp1$geometry)
mp_shp1 <- na.omit(mp_shp$geometry)
View(mp_shp1)
mp_shp2 <- subset(!is.na(mp_shp1$geometry))
is.na(mp_shp$geometry)
mp_shp2 <- mp_shp[!is.na(mp_shp$geometry),]
is.na(mp_shp$geometry)
is.na(mp_shp2$geometry)
View(mp_shp2)
mp_shp2 <- na.omit(mp_shp$geometry)
colnames(mp_shp2)
colnames(mp_shp)
mp_shp2 <- na.exclude(mp_shp$geometry)
colnames(mp_shp2)
!is.na(mp_shp2$geometry)
!is.na(mp_shp$geometry)
View(mp_shp)
sum(is.na(mp_shp$geometry))
sum(is.nan(mp_shp$geometry))
is.nan(mp_shp$geometry)
View(mp_shp)
mp_shp$geometry == c(NaN, NaN)
mp_shp$geometry=c(NaN, NaN)
count(is.na(mp$Lat))
sum(is.na(mp$Lat))
sum(is.na(mp1$Lat))
library(sf)
library(sp)
library(rgdal)
ibrary(raster)
library(raster)
class(mp1)
writeOGR(obj=mp1, dsn=".", layer="mp1",
driver="ESRI Shapefile", overwrite_layer=T)
summarise.sf(mp_shp)
mp_shp <- st_read("namus-missings.shp")
mp_shp2 <- st_as_sf(mp1, coords= c("Lat", "Lon"), crs="proj=utm +zone=18 +datum=WGS84 +units=mi +no_defs")
mp_shp2 <- st_as_sf(mp1, coords= c("Lat", "Lon"), crs="proj=utm +zone=18 +datum=WGS84 +units=m +no_defs")
GEOMETRYCOLLECTION()
write.csv(mp1, file = "mp1.csv")
mp_shp2 <- st_read("mp1-point.shp")
View(mp_shp2)
colnames(mp_shp2)
df = subset(mp_shp2, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
colnames(mp_shp2)
colnames(df)
str(df)
class(df)
colnames(df)
View(df)
class(df$County_Of_)
summary(df)
summary(df$Computed_M)
summary(df$Computed_1)
summary(df$Race_Ethni)
plot(df$Gender)
plot(df$Race_Ethni)
plot(df$Gender)
summary(df$Gender)
summary(df$Computed_1)
str(df$Computed_1)
describe(df$Computed_1)
summary(df$Gender)
mean(df$Computed_1)
summary(mp$Computed_Missing_Min_Age)
class(df$Computed_1)
class(mp$Computed_Missing_Max_Age)
as.integer(df$Current_Ag)
summary(df$Computed_1)
class(df$Computed_1)
class(df$Current_Ag)
str(df$Current__1)
mp_shp2 <- st_read("mp1-point.shp",
stringsAsFactors=FALSE)
colnames(mp_shp2)
df = subset(mp_shp2, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
summary(df)
colnames(df)
summary(df)
as.numer(df$Current_Ag)
as.numeric(df$Current_Ag)
mp_shp2 <- st_read("mp1-point.shp",
stringsAsFactors=FALSE)
df = subset(mp_shp2, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
as.integer(df$Current_Ag)
as.integer(df$Computed_1)
as.integer(df$Computed_M)
summary(df$Computed_1)
class(df$Computed_1)
summary(df$Gender)
plot(df$Race_Ethni)
summary(mp$Computed_Missing_Min_Age)
class(mp$Computed_Missing_Max_Age)
class(df$Computed_M)
summary(as.numeric(df$Computed_M))
summary(df$Gender)
summary(as.factor(df$Gender))
ls(df)
ls(df$Race_Ethni)
ls(as.factor(df$Race_Ethni))
summary(df$Race_Ethni)
summary(as.factor(df$Race_Ethni))
mp_shp2 <- st_read("mp1-point.shp")
mp_shp2 <- st_read("mp1-point.shp")
df = subset(mp_shp2, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
mp <- read.csv("namus-missings-1.csv")
mp1 <- na.omit(mp) #omit NAs
mp_shp <- st_read("namus-missings.shp")
mp_shp1 <- st_read("mp1-point.shp")
df = subset(mp_shp2, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
df = subset(mp_shp1, select = -c(c.NA_character_..NA_character_..NA_character_..NA_character_..) )
colnames(df)
summary(df)
summary(df$Gender)
summary(df$Computed_1)
class(df$Computed_1)
class(as.numeric(df$Computed_1))
summary(as.numeric(df$Computed_1))
summary(as.numeric(df$Computed_M))
summary(as.numeric(df$Current_Ag))
summary(df$Gender)
library(raster)
library(sf)
library(sp)
library(rgdal)
library(tmap)
ls(df$Race_Ethni)
summary(df$Race_Ethni)
class(df)
class(df$geometry)
mp_sf <- st_as_sf(df)
qtm(df, fill = "blue", style = "natural")
qtm(df, fill = "blue", style = "natural")
tmap_mode('view')
tm_shape(mp_sf) +
tm_polygons(col = "#C6DBEF80")
tm_shape(mp_sf)
tm_shape(mp_sf) +
tm_polygons(col = "#C6DBEF80")
tmap_mode("plot")
class(mp_sf)
class(df)
data.frame(mp_sf)
head(data.frame(mp_sf))
geo_shape <- data.frame(mp_sf$geometry)
geo_themes = subset(mp_sf, select = -c(geometry) )
colnames(geo_themes)
geo_themes = subset(df, select = -c(geometry) )
colnames(geo_themes)
geo_themes = subset(mp_sf, select = -c(geometry) )
geo_themes
colnames(mp_sf@data)
race_ethnicity <-data.frame(mp_sf$Race_Ethni)
class(race_ethnicity)
race_ethnicity <- st_as_sf(mp_sf$Race_Ethni)
race_ethnicity <- st_as_sf(race_ethnicity)
summary(race_ethnicity)
class(geo_shape)
st_as_sf(geo_shape)
summary(geo_shape)
summary(race_ethnicity)
class(race_ethnicity)
summarise.sf(race_ethnicity)
summmary(race_ethnicity)
summary(race_ethnicity)
ls(race_ethnicity)
list(race_ethnicity)
tmap_mode('plot')
tm_shape(mp_sf) +
tm_polygons(race_ethnicity)
tmap_mode('plot')
tm_shape(mp) +
tm_polygons(mp$Race_Ethnicity)
st_as_sf(mp1)
class(mp_sf)
mp_sf_v2 <-as(mp_sf, "Spatial")
class(mp_sf_v2)
tm_shape(mp_sf_v2) +
tm_polygons("grey90") +
# add the torn points
tm_shape(mp_sf_v2) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5) +
# map the state borders
tm_shape(mp_sf_v2) +
tm_borders(col = "black") +
tm_layout(frame = F)
qtm(df, fill = "blue", style = "natural")
View(df)
data(tornados)
summary(torm)
summary(torn)
ls()
ls(torn)
colnames(torn)
class(torn)
us_states_sf <- st_as_sf(us_states)
data()
us_states_sf <
tm_shape(us_states_sf) +
tm_polygons("grey90") +
# add the torn points
tm_shape(mp_sf_v2) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5) +
# map the state borders
tm_shape(mp_sf_v2) +
tm_borders(col = "black") +
tm_layout(frame = F)
data()
us_states_sf <
tm_shape(us_states_sf) +
tm_polygons("grey90") +
# add the torn points
tm_shape(mp_sf_v2) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5) +
# map the state borders
tm_shape(mp_sf) +
tm_borders(col = "black") +
tm_layout(frame = F)
summary(us_states)
library(leaflet)
popup = c("Robin", "Jakub", "Jannes")
leaflet() %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012") %>%
addMarkers(lng = c(-3, 23, 11),
lat = c(52, 53, 49),
popup = popup)
install.packages("spData")
install.packages("spData")
library(spData)
devtools::install_github("Nowosad/spDataLarge")
vignette(package = "sf")
vignette(sf1)
vignette("sf1")
par(mar = c(0,0,1,0))
plot(nc[1])
plot(nc[1,1], col = 'grey', add = TRUE)
plot(world)
plot(mp_sf)
plot(mp_sf$Race_Ethni)
plot(mp_sf$namus2Numb)
plot(world[3:6])
plot(world["pop"])
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
library(tmap)
data("World")
tm_shape(World) +
tm_polygons("HPI")
library(tmap)
data("World")
tm_shape(World) +
tm_polygons("HPI")
tmap_mode("view")
tm_shape(World) +
tm_polygons("HPI")
basemap <- tm_shape(World)
colnames(basemap)
str(basemap)
basemap <- tm_shape(World$continent)
colnames(continent)
colnames(basemap)
tm_shape(basemap) +
tm_polygons("mp_sf")
tm_shape(basemap) +
tm_polygons("df")
us_states_map = tm_shape(us_states, projection = 2163) + tm_polygons() +
tm_layout(frame = FALSE)
tm_shape(basemap) +
tm_polygons("df")
View(us_states_map)
View(us_states_map)
View(us_states_map)
hawaii_map = tm_shape(hawaii) + tm_polygons() +
tm_layout(title = "Hawaii", frame = FALSE, bg.color = NA,
title.position = c("LEFT", "BOTTOM"))
alaska_map = tm_shape(alaska) + tm_polygons() +
tm_layout(title = "Alaska", frame = FALSE, bg.color = NA)
us_states_map
print(hawaii_map, vp = grid::viewport(0.35, 0.1, width = 0.2, height = 0.1))
print(alaska_map, vp = grid::viewport(0.15, 0.15, width = 0.3, height = 0.3))
tm_shape(basemap) +
tm_polygons("df")
install.packages("mapdeck")
library(mapdeck)
